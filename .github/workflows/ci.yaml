name: CI checks

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  download-srs:
    runs-on: ubuntu-latest
    outputs:
      srs-cache-hit: ${{ steps.cache-srs.outputs.cache-hit }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: Restore SRS from cache
        id: restore-srs
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684
        with:
          path: circuits/examples/assets/bls_filecoin_2p19
          key: fixed-srs-cache

      - name: Download SRS if not cached
        if: steps.restore-srs.outputs.cache-hit != 'true'
        run: |
          mkdir -p circuits/examples/assets
          curl -L -o circuits/examples/assets/bls_filecoin_2p19 \
            https://midnight-s3-fileshare-dev-eu-west-1.s3.eu-west-1.amazonaws.com/bls_filecoin_2p19

  test-blstrs:
    if: github.event.pull_request.draft == false
    name: Test blstrs
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - uses: ./.github/actions/cargo-test
        with:
          package: midnight-curves
          args: --release --all-features

  test-circuits:
    needs: download-srs
    if: github.event.pull_request.draft == false
    name: Test circuits
    runs-on: ubuntu-latest-16-core-x64

    env:
      RUST_BACKTRACE: full

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - name: Restore SRS from cache
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684
        with:
          path: circuits/examples/assets/bls_filecoin_2p19
          key: fixed-srs-cache

      - uses: ./.github/actions/cargo-test
        with:
          package: midnight-circuits
          args: --release --all-features

  test-vk-consistency:
    needs: download-srs
    if: github.event.pull_request.draft == false
    name: Test VK consistency
    runs-on: ubuntu-latest-16-core-x64

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - name: Restore SRS from cache
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684
        with:
          path: circuits/examples/assets/bls_filecoin_2p19
          key: fixed-srs-cache

      - uses: ./.github/actions/cargo-test
        with:
          package: midnight-circuits
          args: --release --all-features -- --ignored

  test-proofs:
    if: github.event.pull_request.draft == false
    name: Test proofs
    runs-on: ubuntu-latest
    steps:
      - name: Install libfontconfig1-dev
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y libfontconfig1-dev
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - uses: ./.github/actions/cargo-test
        with:
          package: midnight-proofs
          args: --release --all-features

  test-aggregator:
    if: github.event.pull_request.draft == false
    name: Test Aggregator
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - uses: ./.github/actions/cargo-test
        with:
          package: midnight-aggregator
          args: --release --all-features


  doc-links:
    if: github.event.pull_request.draft == false
    name: Intra-doc links
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - name: 'Install rust-toolchain.toml'
        run: rustup toolchain install
      - name: cargo fetch
        run: cargo fetch

      # Ensure intra-documentation links all resolve correctly
      # Requires #![deny(intra_doc_link_resolution_failure)] in crates.
      - name: Check intra-doc links
        run: cargo doc --workspace --document-private-items --no-deps

  fmt:
    if: github.event.pull_request.draft == false
    name: Rustfmt
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - uses: dtolnay/rust-toolchain@nightly
      - run: rustup component add rustfmt --toolchain nightly
      - run: cargo +nightly fmt --all -- --check

  clippy:
    if: github.event.pull_request.draft == false
    name: Clippy
    timeout-minutes: 30
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - name: 'Install rust-toolchain.toml'
        run: rustup toolchain install

      - name: Run Clippy on `blstrs`
        continue-on-error: true
        run: cargo clippy -p midnight-curves --all-targets --all-features -- -Dwarnings

      - name: Run Clippy on `proofs`
        continue-on-error: true
        run: cargo clippy -p midnight-proofs --all-targets --all-features -- -Dwarnings

      - name: Run Clippy on `circuits`
        continue-on-error: true
        run: cargo clippy -p midnight-circuits --all-targets --all-features -- -Dwarnings

      - name: Run Clippy on `aggregator`
        continue-on-error: true
        run: cargo clippy -p midnight-aggregator --all-targets --all-features -- -Dwarnings
